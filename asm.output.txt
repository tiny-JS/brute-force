gcc
# JVM可执行文件结构描述
# 文件以.JSE后缀

前提
>. 数据大多以字节、一个字和双字形式
>. 浮点数按照C语言本身
>. 字符串将在开头插入4个字节记录长度, 而不是c语言中\0结尾
>. 每个文件都在前面加上一个表示大小的项, 这可以用于c语言快速输入

# .JSE可执行格式概述
----------------------
| main header        |
| instruction Stream |
| string table       |
| function table     |
| host api call table|
----------------------

1. main header
在这里将存储脚本的一般信息, 大小是唯一固定的, 如下所示
------------------------------------------------------------------------------------
名字        大小(字节)         描述
ID字符串       4        包含.JSE ID"JSEX"的4个字符的字符串
版本           2        版本号, 第一个字节是主板本号major, 第二个字节是次版本号minor
堆栈大小        4        需要的堆栈大小(可通过@setStackSize指示符设置, 0表示默认)
全局数据大小     4        所有全局数据的大小
_main()是否存在  1        0|1
_main()索引      4        位置索引
------------------------------------------------------------------------------------
       #main header
___________________________________________
| "JSE0" id string|ID String              |
| 0.1 version(0.1)|version(0.1)           |
| 1024            |stack size             |
| 12              |global data size       |
| 1               |is _main() present?    |
| 4               |_main() function index |
----------------------------------------------------------------------------------------

2. instruction stream (指令流)

每个汇编指令编译结构如下
-----------------------------------------------------
opcode | operand count | operand type | operand data|
-----------------------------------------------------

以下是指令流结构概括
                        指令流结构
-------------------------------------------------------------
名   字               大小(字节)      描  述
大小(size)               4         流里指令的数量
流(stream)               N         指令结构中流的长度
-------------------------------------------------------------

                        指令结构
-------------------------------------------------------------
名   字               大小(字节)      描  述
操作码(opcode)           2      指令的操作码, 和特定的vm动作相对应
操作数流(operand stream) N      包含指令的操作数数据
-------------------------------------------------------------

                        操作数流结构(operand stream)
-------------------------------------------------------------
名   字               大小(字节)      描 述
大小(size)                1       流中的操作数的个数(操作数计数)
流(stream)                N       操作数据流结构中的流的长度
-------------------------------------------------------------

                        操作数结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
类型(type)                1       操作数的类型(整型字面量、变量等)
数据(data)                N       操作数数据, 可以是任意大小
-------------------------------------------------------------

以下是操作数类型编码信息
                        操作数类型编码信息
------------------------------------------------------------------------------------------
    编   码        名   字            描    述
       0         整型字面量        整型字面量, 比如256或者-1024
       1        浮点型字面量       浮点型字面量, 比如3.14, -3.14
       2        字符串字面量       字符串只存储于字符串表而不是指令流中, 这里只是字符串表的数字索引
       3        绝对堆栈索引       堆栈的直接索引, 可以用来访问变量以及字面量值索引的数组
       4        相对堆栈索引       通过基址和偏移量来访问堆栈, 使用"变量索引"的数组
       5        指令索引           指令流的索引, 用来作为跳转指令的目标
       6        函数索引           函数表的索引, call指令使用它来进行函数调用
       7      主应用程序API调用索引  主应用程序API调用表的索引, 主要是callHost指令
       8        寄存器             代码指定的特定寄存器(目前只有_retVal)
------------------------------------------------------------------------------------------

3. string table (字符串表)

                    字符串表结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
大小(type)                4       表中字符串的数量统计
字符串(strings)            N        字符串数据
-------------------------------------------------------------

                    字符串结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
大小(size)                4       字符串中的字符数量统计
字符(characters)          N       字符数据
-------------------------------------------------------------

4. function table (函数表)

                    函数表结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
大小(size)                4       表中的函数数量统计
函数(functions)          N       函数数据
-------------------------------------------------------------

                    函数结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
入口点                    4        函数第一条指令的索引
参数个数                  4         函数所接收的参数的个数
局部数据大小               4        所有函数局部数据的大小
-------------------------------------------------------------

5. host api call table (主应用程序API调用表)

                    主应用程序API调用表结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
大小(size)                4       表中的主应用程序API调用的数量
主应用程序API调用          N        主应用程序API调用
-------------------------------------------------------------

                    主应用程序API调用结构
-------------------------------------------------------------
名   字               大小(字节)      描   述
大小(size)                4       主应用程序API调用函数名中的字符的数量
字符(characters)          N       主应用程序API函数字符串(不是null字符结尾)
-------------------------------------------------------------